apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8sregulatedresources
  labels:
    {{- include "gatekeeper.labels" . | nindent 4 }}
spec:
  crd:
    spec:
      names:
        kind: K8sRegulatedResources
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          type: object
          properties:
            action:
              type: string
            resources:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sregulatedresources

        violation[{"msg": msg}] {
          input.parameters.action == "allow"
          not count({input.review.object.metadata.name} & cast_set(input.parameters.resources)) == 1
          msg := sprintf("input resource  <%v> is not in the allowed list of resources <%v>", [input.review.object.metadata.name, input.parameters.resources])
        }

        violation[{"msg": msg}] {
          input.parameters.action == "deny"
          count({input.review.object.metadata.name} & cast_set(input.parameters.resources)) == 1
          msg := sprintf("input resource  <%v> is in the disallowed list of resources <%v>", [input.review.object.metadata.name, input.parameters.resources])
        }
